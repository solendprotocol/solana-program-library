# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 0363b7568de37aec7984d818e0601c043637cc36d4c53586acf0f1788ed2670e # shrinks to test_case = MaxWithdrawAmountTestCase { borrowed_value_upper_bound: 50.000000000000000000, allowed_borrow_value: 100.000000000000000000, collateral_deposited_amount: 2000000000, reserve: Reserve { version: 0, last_update: LastUpdate { slot: 0, stale: false }, lending_market: 11111111111111111111111111111111, liquidity: ReserveLiquidity { mint_pubkey: 11111111111111111111111111111111, mint_decimals: 0, supply_pubkey: 11111111111111111111111111111111, pyth_oracle_pubkey: 11111111111111111111111111111111, switchboard_oracle_pubkey: 11111111111111111111111111111111, available_amount: 100000000000, borrowed_amount_wads: 0.000000000000000000, cumulative_borrow_rate_wads: 0.000000000000000000, accumulated_protocol_fees_wads: 0.000000000000000000, market_price: 10.000000000000000000, smoothed_market_price: 9.000000000000000000 }, collateral: ReserveCollateral { mint_pubkey: 11111111111111111111111111111111, mint_total_supply: 50000000000, supply_pubkey: 11111111111111111111111111111111 }, config: ReserveConfig { optimal_utilization_rate: 0, loan_to_value_ratio: 50, liquidation_bonus: 0, liquidation_threshold: 0, min_borrow_rate: 0, optimal_borrow_rate: 0, max_borrow_rate: 0, fees: ReserveFees { borrow_fee_wad: 0, flash_loan_fee_wad: 0, host_fee_percentage: 0 }, deposit_limit: 0, borrow_limit: 0, fee_receiver: 11111111111111111111111111111111, protocol_liquidation_fee: 0, protocol_take_rate: 0, added_borrow_weight_bps: 0 }, rate_limiter: RateLimiter { config: RateLimiterConfig { window_duration: 1, max_outflow: 18446744073709551615 }, prev_qty: 0.000000000000000000, window_start: 1, cur_qty: 0.000000000000000000 } }, expected_max_withdraw_amount: 5000000000 }
cc 10d5008b56dcaa08f91fc1d6a2b03159737fb78286f4b227d1288c56f7975d12 # shrinks to test_case = MaxWithdrawAmountTestCase { obligation: Obligation { version: 0, last_update: LastUpdate { slot: 0, stale: false }, lending_market: 11111111111111111111111111111111, owner: 11111111111111111111111111111111, deposits: [ObligationCollateral { deposit_reserve: 11111111111111111111111111111111, deposited_amount: 2000000000, market_value: 0.000000000000000000 }], borrows: [ObligationLiquidity { borrow_reserve: 11111111111111111111111111111111, cumulative_borrow_rate_wads: 0.000000000000000000, borrowed_amount_wads: 10.000000000000000000, market_value: 0.000000000000000000 }], deposited_value: 0.000000000000000000, borrowed_value: 0.000000000000000000, borrowed_value_upper_bound: 50.000000000000000000, allowed_borrow_value: 100.000000000000000000, unhealthy_borrow_value: 0.000000000000000000 }, reserve: Reserve { version: 0, last_update: LastUpdate { slot: 0, stale: false }, lending_market: 11111111111111111111111111111111, liquidity: ReserveLiquidity { mint_pubkey: 11111111111111111111111111111111, mint_decimals: 9, supply_pubkey: 11111111111111111111111111111111, pyth_oracle_pubkey: 11111111111111111111111111111111, switchboard_oracle_pubkey: 11111111111111111111111111111111, available_amount: 100000000000, borrowed_amount_wads: 0.000000000000000000, cumulative_borrow_rate_wads: 0.000000000000000000, accumulated_protocol_fees_wads: 0.000000000000000000, market_price: 10.000000000000000000, smoothed_market_price: 5.000000000000000000 }, collateral: ReserveCollateral { mint_pubkey: 11111111111111111111111111111111, mint_total_supply: 50000000000, supply_pubkey: 11111111111111111111111111111111 }, config: ReserveConfig { optimal_utilization_rate: 0, loan_to_value_ratio: 50, liquidation_bonus: 0, liquidation_threshold: 0, min_borrow_rate: 0, optimal_borrow_rate: 0, max_borrow_rate: 0, fees: ReserveFees { borrow_fee_wad: 0, flash_loan_fee_wad: 0, host_fee_percentage: 0 }, deposit_limit: 0, borrow_limit: 0, fee_receiver: 11111111111111111111111111111111, protocol_liquidation_fee: 0, protocol_take_rate: 0, added_borrow_weight_bps: 0 }, rate_limiter: RateLimiter { config: RateLimiterConfig { window_duration: 1, max_outflow: 18446744073709551615 }, prev_qty: 0.000000000000000000, window_start: 1, cur_qty: 0.000000000000000000 } }, expected_max_withdraw_amount: 3000000000 }
